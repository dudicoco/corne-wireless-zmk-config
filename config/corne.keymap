/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

#define KEYS_L LT0 LT1 LT2 LT3 LT4 LM0 LM1 LM2 LM3 LM4 LB0 LB1 LB2 LB3 LB4
#define KEYS_R RT0 RT1 RT2 RT3 RT4 RM0 RM1 RM2 RM3 RM4 RB0 RB1 RB2 RB3 RB4
#define THUMBS LH2 LH1 LH0 RH0 RH1 RH2 // Thumbs on 36+ keys.

#define MAKE_HRM(NAME, HOLD, TAP, TRIGGER_POS)                                 \
  ZMK_HOLD_TAP(NAME, bindings = <HOLD>, <TAP>; flavor = "balanced";            \
               tapping-term-ms = <280>; quick-tap-ms = <QUICK_TAP_MS>;         \
               require-prior-idle-ms = <150>; hold-trigger-on-release;         \
               hold-trigger-key-positions = <TRIGGER_POS>;)

MAKE_HRM(hml, &kp, &kp, KEYS_R THUMBS) // Left-hand HRMs.
MAKE_HRM(hmr, &kp, &kp, KEYS_L THUMBS) // Right-hand HRMs.

&lt {
    flavor = "hold-preferred";
    tapping-term-ms = <200>;
};

&mt {
    flavor = "hold-preferred";
    tapping-term-ms = <200>;
};

/ {
    behaviors {
        space: space {
            compatible = "zmk,behavior-hold-tap";
            label = "Space";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <150>;
            flavor = "tap-preferred";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        base {
            label = "Base";
            bindings = <
&kp TAB    &kp Q                &kp W                  &kp E              &kp R               &kp T          &kp Y            &kp U               &kp I                &kp O                   &kp P                         &kp BACKSLASH
&kp TAB    &hml LEFT_SHIFT A  &hml LEFT_CONTROL S  &hml LEFT_GUI D  &hml LEFT_ALT F   &kp G          &kp H            &hmr RIGHT_ALT J  &hmr RIGHT_GUI K   &hmr RIGHT_CONTROL L  &hmr RIGHT_SHIFT SEMICOLON  &kp SQT
&kp GRAVE  &kp Z                &kp X                  &kp C              &kp V               &kp B          &kp N            &kp M               &kp COMMA            &kp DOT                 &kp FSLH                      &kp RIGHT_SHIFT
                                                       &mt LEFT_ALT TAB   &space LCTRL SPACE  &lt 2 ENTER    &lt 1 BACKSPACE  &mt RSHIFT ESC      &mt RIGHT_GUI SPACE
            >;
        };

        numbers {
            label = "Numbers";
            bindings = <
&trans  &kp N1  &kp N2     &kp N3     &kp N4     &kp N5    &kp N6    &kp N7      &kp N8             &kp N9           &kp N0    &trans
&trans  &trans  &mkp RCLK  &mkp MCLK  &mkp LCLK  &trans    &kp LEFT  &kp DOWN    &kp UP             &kp RIGHT        &kp HOME  &kp PAGE_UP
&trans  &trans  &trans     &trans     &trans     &trans    &trans    &kp C_MUTE  &kp C_VOLUME_DOWN  &kp C_VOLUME_UP  &kp END   &kp PAGE_DOWN
                           &trans     &trans     &trans    &trans    &trans      &trans
            >;
        };

        symbols {
            label = "Symbols";
            bindings = <
&trans  &kp EXCL   &kp AT         &kp HASH        &kp DLLR          &kp PRCNT               &kp CARET              &kp AMPS           &kp ASTERISK     &kp MINUS         &kp EQUAL      &trans
&trans  &kp SLASH  &kp LESS_THAN  &kp LEFT_BRACE  &kp LEFT_BRACKET  &kp LEFT_PARENTHESIS    &kp RIGHT_PARENTHESIS  &kp RIGHT_BRACKET  &kp RIGHT_BRACE  &kp GREATER_THAN  &kp BACKSLASH  &trans
&trans  &kp GRAVE  &kp TILDE      &kp UNDERSCORE  &kp MINUS         &kp SINGLE_QUOTE        &kp DOUBLE_QUOTES      &kp PLUS           &kp PIPE         &kp EQUAL         &trans         &trans
                                  &trans          &trans            &trans                  &trans                 &trans             &trans
            >;
        };

        system {
            bindings = <
&trans     &kp F1   &kp F2   &kp F3        &kp F4        &kp F5    &kp F6          &kp F7  &kp F8  &kp F9  &kp F10  &trans
&trans     &kp F11  &kp F12  &trans        &trans        &trans    &studio_unlock  &trans  &trans  &trans  &trans   &trans
&soft_off  &trans   &trans   &bt BT_SEL 1  &bt BT_SEL 0  &trans    &trans          &trans  &trans  &trans  &trans   &trans
                             &trans        &trans        &trans    &trans          &trans  &trans
            >;

            label = "System";
        };
    };

    conditional_layers {
        compatible = "zmk,conditional-layers";

        system {
            if-layers = <1 2>;
            then-layer = <3>;
        };
    };
};
